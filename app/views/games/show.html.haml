.row
  .col-sm-4
    .center
      = render 'games/image_game', game: @game
    
    - if @game.has_achievements?
      #list-achievements
        %h4= t("steam.show.last_achievements")
        = render "user_achievements", user_achievements: @game.user_achievements.reverse_order.limit(6).includes(user: :images, achievement: :game)
      = link_to t("steam.show.link_achievement"), achievements_game_path(@game)

    - else
      %h4= t("steam.show.no_achievement") 


  
  .col-sm-8
    %h1
      = @game.name
      = link_to t("steam.show.play_now"), "steam://run/#{@game.app_id}", class: "btn btn-primary"
      = link_to t("steam.show.see_store"), @game.store_url, class: 'btn btn-primary'
      - if @game.need_permissions? && (can? :ask_permission, @game)
        = link_to t("steam.firewall.ask_permission"), ask_permission_game_path(@game), class: 'btn btn-warning', method: :post

    = render 'game_resume', game: @game
    = t("steam.show.nb_player", count: @game.users.count) + " :"
    %br
    .list-steam-user
      - @game.users.includes(:images).each do |user|
        = render 'users/steam_avatar', user: user
    - if @game.has_achievements?
      #charts_achievements
        - if @game.user_achievements.empty?
          %h4= t("steam.show.no_user_achievement") 

= render 'comments/list', resource: @game

- if @game.has_achievements? && !@game.user_achievements.empty?
  = render "games/charts_achievements", title: t("steam.charts.achievements.title_total.game", game: @game.name.encode(Encoding::UTF_8)), achievements: @game.user_achievements.number_achievements_by(1.days), user_id: 0, game_id: @game.id
